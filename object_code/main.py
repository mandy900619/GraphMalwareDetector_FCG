import os
from graphDetector import *
import func_timeout
from func_timeout import func_set_timeout
from malwareDetector.config import parameter_parser
@func_set_timeout(3600)

def main():
    detector = subDetector()
    opcode_set = "./opcode_set.pickle"
    try:
        filename = os.path.basename(detector.path.input)
        fcg = detector.extractFeature(detector.path.input, filename, detector.folder.feature)

    except func_timeout.exceptions.FunctionTimedOut:
        print(f"Timeout in radare2: {detector.path.input}")

    if not os.exists(opcode_set):
        print("Opcode set not found")
        print("Start generate opcode set")
        detector.generate_opcode_set("./", 500)
    else:
        with open(opcode_set, "rb") as f:
            opcode_set = pickle.load(f)
            f.close()
    
    embedding_data = detector.vectorize(fcg,  opcode_set, filename, detector.folder.vectorize)
    model = detector.model(False)
    result = detector.predict(embedding_data, model)
    print(result)
    detector.write_to_file(detector.path.input, detector.path.output, result)

if __name__=='__main__':
    args = parameter_parser()
    main()
