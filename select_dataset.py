import json
import os
import time
import pandas as pd
baseHome = "/home/mandy900619"

save_path = baseHome + "/detector/graph_detector/dataset.csv"
malware_report_folder_dir = baseHome + "/malware/report/"
benignware_csv_path = baseHome + "/data/dataset.csv"

start_time = time.time()
dataset = pd.DataFrame(columns=['filename', 'label', 'CPU Architecture'])

catecory_malware = {
    "Intel 80386": "i386",
    "MIPS R3000": "MIPS",
    "Advanced Micro Devices X86-64": "X86_64",
    "ARM": "ARM",
    "PowerPC": "PowerPC",
}

malware_report_folder_list = os.listdir(malware_report_folder_dir)
malware_count = 0
select_malware_num = 20000
for report_folder in malware_report_folder_list:
    if os.path.isdir(malware_report_folder_dir + report_folder):
        report_folder_list = os.listdir(malware_report_folder_dir + report_folder)
        i386_count = 0
        for report in report_folder_list:
            file_path = os.path.join(malware_report_folder_dir + report_folder, report)
            with open(file_path, encoding="utf-8") as f:
                malware_json = json.load(f)
                if "additional_info" in malware_json and "gandelf" in malware_json["additional_info"] and "header" in malware_json["additional_info"]["gandelf"]:
                    cpu_type = malware_json["additional_info"]["gandelf"]["header"]["machine"]
                else:
                    cpu_type = "N/A"
                if cpu_type == "<unknown>" :
                    if "additional_info" in malware_json and "exiftool" in malware_json["additional_info"] and "CPUType" in malware_json["additional_info"]["exiftool"]:
                        cpu_type = malware_json["additional_info"]["exiftool"]["CPUType"]
                    else:
                        cpu_type = "N/A"
                if cpu_type in catecory_malware.keys() :
                    if cpu_type == "Intel 80386":
                        if i386_count < 1000:
                            i386_count += 1
                        else:
                            continue
                    new_data = {'filename': [report.split(".")[0]], 'label': ["malware"], 'CPU Architecture': [catecory_malware[cpu_type]]}
                    new_df = pd.DataFrame(new_data)
                    dataset = pd.concat([dataset, new_df], ignore_index=True)
                    malware_count += 1
                if malware_count == select_malware_num:
                    break
    if malware_count == select_malware_num:
        break

catecory_benign = {
    "x86el": "i386",
    "mipsel": "MIPS",
    "mipseb": "MIPS",
    "x86_64el": "X86_64",
    "armel": "ARM",
    "ppceb": "PowerPC",
}


benignware_count = 0
select_benign_num = 20000

benign_report = pd.read_csv(benignware_csv_path)

benign = benign_report[(benign_report['label'] == 'BenignWare')]

#print(benign)
for index, row in benign.iterrows():
    if row['CPU Architecture'] in catecory_benign.keys():
       new_data = {'filename': [row['filename']], 'label': ["benignware"], 'CPU Architecture': [catecory_benign[row['CPU Architecture']]]} 
       new_df = pd.DataFrame(new_data)
       dataset = pd.concat([dataset, new_df], ignore_index=True)
       benignware_count += 1
    if benignware_count == select_benign_num:
        break

print(dataset)

for element in catecory_malware:
    md = dataset[(dataset['label']=="malware")]
    bd = dataset[(dataset["label"]=="benignware")]
    malwareCount = md['CPU Architecture'].value_counts()[catecory_malware[element]]
    benignwareCount = bd['CPU Architecture'].value_counts()[catecory_malware[element]]
    print(f"malware {catecory_malware[element]}: {malwareCount}")
    print(f"benign {catecory_malware[element]}: {benignwareCount}")
    



dataset.to_csv(save_path, index=False)

end_time = time.time()
execution_time_minutes = (end_time - start_time) / 60
print(f"執行時間：{execution_time_minutes:.2f} 分鐘")